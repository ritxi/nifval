name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      code-changed: ${{ steps.changes.outputs.code }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          code:
            - 'lib/**'
            - 'spec/**'
            - 'Gemfile*'
            - '*.gemspec'
            - '.github/workflows/ci.yml'

  test:
    needs: detect-changes
    if: needs.detect-changes.outputs.code-changed == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['2.7', '3.0', '3.1', '3.2', '3.3']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically

    - name: Run specs
      if: matrix.ruby-version != '3.3'
      run: bundle exec rspec

    - name: Run specs with coverage (Ruby 3.3 only)
      if: matrix.ruby-version == '3.3'
      run: COVERAGE=true bundle exec rspec

    - name: Upload coverage to Codecov (Ruby 3.3 only)
      if: matrix.ruby-version == '3.3'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
        verbose: true

  skip-codecov:
    needs: detect-changes
    if: needs.detect-changes.outputs.code-changed != 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Codecov CLI
      run: |
        curl -Os https://cli.codecov.io/latest/linux/codecov
        chmod +x codecov

    - name: Create commit in Codecov
      run: ./codecov --auto-load-params-from GithubActions --verbose create-commit
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Create report in Codecov
      run: ./codecov --auto-load-params-from GithubActions --verbose create-report
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload empty report to Codecov
      run: ./codecov --auto-load-params-from GithubActions --verbose empty-upload
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
